{"version":3,"sources":["components/statistics/Statistics.js","components/feedbackOptions/FeedbackOptions.js","components/section/Section.js","components/notification/Notification.js","components/Feedback/Feedback.js","components/App.js","index.js"],"names":["Statistics","this","props","good","neutral","bad","total","positivePercentage","Component","FeedbackOptions","options","onLeaveFeedback","map","option","key","type","name","onClick","Section","title","children","Notification","message","Feedback","state","handleLeaveFeedback","setState","prevState","countTotalFeedback","Object","values","reduce","amount","countPositiveFeedbackPercentage","toFixed","totalFn","keys","App","ReactDOM","render","document","getElementById"],"mappings":"2NAGqBA,E,uKAEP,IAAD,EACoDC,KAAKC,MAAtDC,EADH,EACGA,KAAMC,EADT,EACSA,QAASC,EADlB,EACkBA,IAAKC,EADvB,EACuBA,MAAOC,EAD9B,EAC8BA,mBAEnC,OACI,6BACK,0CAEb,mCAASJ,GACT,sCAAYC,GACZ,kCAAQC,GAER,oCAAUC,GACV,gDAAuBA,GAAUC,EAAjC,U,GAdoCC,aCAnBC,E,uKACP,IAAD,EAC8BR,KAAKC,MAAjCQ,EADF,EACEA,QAASC,EADX,EACWA,gBAChB,OACI,oCACHD,EAAQE,KAAI,SAAAC,GAAM,OACnB,4BAASC,IAAKD,EAAQE,KAAK,SAASC,KAAMH,EAAQI,QAAS,kBAAIN,EAAgBE,KAAUA,W,GANpDL,aCAxBU,E,uKACP,IAAD,EACajB,KAAKC,MAAxBiB,EADM,EACNA,MAAOC,EADD,EACCA,SACN,OACI,oCACK,4BAAKD,GACJC,O,GANmBZ,aCAhBa,E,uKACP,IACCC,EAAWrB,KAAKC,MAAhBoB,QACP,OACI,oCACI,2BAAIA,Q,GALsBd,aCwC3Be,E,4MAlCXC,MAAQ,CACJrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEXoB,oBAAsB,SAACT,GACzB,EAAKU,UAAS,SAAAC,GAAS,sBAAKX,EAAOW,EAAUX,GAAM,O,EAGjDY,mBAAoB,WACrB,OAAOC,OAAOC,OAAO,EAAKN,OAAOO,QAAQ,SAACzB,EAAO0B,GAAR,OAAmB1B,EAAQ0B,IAAQ,I,EAG3EC,gCAAgC,WAG3B,OADsB,IADT,EAAKT,MAAZrB,KACsB,EAAKyB,sBAAsBM,W,uDAGrD,IAAD,EAC0BjC,KAAKuB,MAA3BrB,EADJ,EACIA,KAAMC,EADV,EACUA,QAASC,EADnB,EACmBA,IACjB8B,EAAUlC,KAAK2B,qBACrB,OACA,kBAAC,EAAD,CAAST,MAAM,yBACnB,kBAAC,EAAD,CAAiBT,QAASmB,OAAOO,KAAKnC,KAAKuB,OAAQb,gBAAiBV,KAAKwB,sBAEtEU,EAAU,EACV,kBAAC,EAAD,CAAYhC,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAO6B,EAAS5B,mBAAoBN,KAAKgC,oCAC9F,kBAAC,EAAD,CAAcX,QAAQ,2B,GA5BDd,aCER6B,EAPJ,WACP,OACI,oCACA,kBAAC,EAAD,QCARC,IAASC,OACP,kBAAC,aAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.20cb30bf.chunk.js","sourcesContent":["\nimport React, { Component } from 'react'\n\nexport default class Statistics extends Component {\n    \n    render() {\n        const { good, neutral, bad, total, positivePercentage} = this.props;\n        \n        return (\n            <div>\n                 <h3>Statistics</h3>\n\n    <p>Good:{good}</p>\n    <p>Neutral:{neutral}</p>\n    <p>Bad:{bad}</p>\n\n    <p>Total:{total}</p>\n    <p>Positive feedback:{(total) && positivePercentage}%</p>\n    </div>\n        \n        )\n    }\n}\n\n\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'; \n\nexport default class FeedbackOptions extends Component {\n    render() {\n        const {options, onLeaveFeedback} = this.props\n        return (\n            <>\n        {options.map(option => \n        <button  key={option} type=\"button\" name={option} onClick={()=>onLeaveFeedback(option)}>{option}</button>)\n             }       \n            </>\n        )\n    }\n};\nFeedbackOptions.propTypes={\n    options:PropTypes.arrayOf(\n        PropTypes.string,\n    ),\n    onLeaveFeedback: PropTypes.func\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'; \n\nexport default class Section extends Component {\n    render() {\nconst {title, children} = this.props\n        return (\n            <>\n                 <h2>{title}</h2>\n                 {children}\n\n            </>\n        )\n    }\n}\nSection.propTypes={\n    title: PropTypes.string,\n   // children: PropTypes.element,//? ошибка в консоли\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'; \n\nexport default class Notification extends Component {\n    render() {\n        const {message} = this.props;\n        return (\n            <>\n                <p>{message}</p>\n            </>\n        )\n    }\n}\nNotification.propTypes={\n    message: PropTypes.string,\n}","import React, { Component } from 'react';\nimport Statistics from '../statistics/Statistics';\nimport FeedbackOptions from '../feedbackOptions/FeedbackOptions';\nimport Section from '../section/Section';\nimport Notification from '../notification/Notification';\nimport PropTypes from 'prop-types'; \n\n\nclass Feedback extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n      }\n  handleLeaveFeedback = (name) => {\nthis.setState(prevState=>({[name]: prevState[name]+1}));\n  }   \n\n  countTotalFeedback =()=> {\n return Object.values(this.state).reduce(((total, amount) => total + amount),0)  \n  }\n\n  countPositiveFeedbackPercentage=()=>{\n      const {good}= this.state;\n      const result = (good * 100 / this.countTotalFeedback()).toFixed();\n       return result\n  }\nrender(){\n    const { good, neutral, bad} = this.state;\n    const totalFn = this.countTotalFeedback()\n    return (\n    <Section title=\"Please leave feedback\">\n<FeedbackOptions options={Object.keys(this.state)} onLeaveFeedback={this.handleLeaveFeedback}/>\n\n{ (totalFn > 0)\n?  <Statistics good={good} neutral={neutral} bad={bad} total={totalFn} positivePercentage={this.countPositiveFeedbackPercentage()}/>\n: <Notification message=\"No feedback given\"/>}\n </Section>\n\n    )\n}\n\n}\nexport default Feedback;\n\nFeedback.propTypes ={\n    state: PropTypes.objectOf(\n        PropTypes.shape({\n            good: PropTypes.number,\n            neutral: PropTypes.number,\n            bad: PropTypes.number,\n        })\n    )\n}","import React from 'react';\nimport Feedback from './Feedback/Feedback'\n\nconst App =()=>{\n    return (\n        <>\n        <Feedback/>\n        </>\n    )\n}\nexport default App;","import React,{StrictMode} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}